{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sehli\\\\OneDrive\\\\Bureau\\\\portfolio\\\\portfolio\\\\MyLight\\\\feu\\\\src\\\\Components\\\\Signup\\\\Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport axios from 'axios'; // Import Axios for API requests\n\nimport registerVector from '../../Assets/registerVector.svg';\nimport googleHome from '../../Assets/googleBtn.svg';\nimport usernameIcon from '../../Assets/usernameIcon.svg';\nimport emailIcon from '../../Assets/emailIcon.svg';\nimport passwordIcon from '../../Assets/passwordIcon.svg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const validationRegisterSchema = Yup.object().shape({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email(`That doesn't look like an email address`).required('Email is required'),\n    password: Yup.string().min(8, 'Password is too short - should be 8 chars minimum').required('Password is required')\n  });\n\n  // Function to validate field on change\n  const handleFieldValidation = async (name, value) => {\n    try {\n      await validationRegisterSchema.validateAt(name, {\n        [name]: value\n      });\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [name]: ''\n      })); // Clear the error if valid\n    } catch (err) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [name]: err.message\n      })); // Set specific error\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Update state for form fields\n    if (name === 'username') setUsername(value);\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n\n    // Validate the input as the user types\n    handleFieldValidation(name, value);\n  };\n  const switchToSigninModal = () => {\n    navigate('/login');\n  };\n\n  // Handle Register form submission\n  const handleSubmitRegister = async e => {\n    e.preventDefault();\n    setErrors({});\n    try {\n      // Validate the form before submitting\n      await validationRegisterSchema.validate({\n        username,\n        email,\n        password\n      }, {\n        abortEarly: false\n      });\n\n      // ðŸš€ **API Request to Register**\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      console.log('JWT Token:', token);\n\n      // âœ… **Store token in localStorage or sessionStorage**\n      localStorage.setItem('token', token); // Or use sessionStorage.setItem('token', token);\n\n      // âœ… **Navigate to Login page**\n      navigate('/login');\n\n      // Clear the form fields\n      setUsername('');\n      setEmail('');\n      setPassword('');\n    } catch (err) {\n      if (err.response) {\n        // Server-side validation error (API response)\n        console.log(\"first\");\n      } else if (err.name === 'ValidationError') {\n        // Yup validation errors\n        const validationErrors = {};\n        err.inner.forEach(error => {\n          validationErrors[error.path] = error.message;\n        });\n        setErrors(validationErrors);\n      } else {\n        // General errors\n        console.log(\"second\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavbarHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Signup, \"ykBh53a6WFPNG7lteoyvSl7Qz1I=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","Yup","axios","registerVector","googleHome","usernameIcon","emailIcon","passwordIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","navigate","username","setUsername","email","setEmail","password","setPassword","errors","setErrors","validationRegisterSchema","object","shape","string","required","min","handleFieldValidation","name","value","validateAt","prevErrors","err","message","handleInputChange","e","target","switchToSigninModal","handleSubmitRegister","preventDefault","validate","abortEarly","response","post","token","data","console","log","localStorage","setItem","validationErrors","inner","forEach","error","path","children","NavbarHome","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sehli/OneDrive/Bureau/portfolio/portfolio/MyLight/feu/src/Components/Signup/Signup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios'; // Import Axios for API requests\r\n\r\nimport registerVector from '../../Assets/registerVector.svg';\r\nimport googleHome from '../../Assets/googleBtn.svg';\r\nimport usernameIcon from '../../Assets/usernameIcon.svg';\r\nimport emailIcon from '../../Assets/emailIcon.svg';\r\nimport passwordIcon from '../../Assets/passwordIcon.svg';\r\n\r\nconst Signup = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validationRegisterSchema = Yup.object().shape({\r\n        username: Yup.string().required('Username is required'),\r\n        email: Yup.string().email(`That doesn't look like an email address`).required('Email is required'),\r\n        password: Yup.string()\r\n            .min(8, 'Password is too short - should be 8 chars minimum')\r\n            .required('Password is required')\r\n    });\r\n\r\n    // Function to validate field on change\r\n    const handleFieldValidation = async (name, value) => {\r\n        try {\r\n            await validationRegisterSchema.validateAt(name, { [name]: value });\r\n            setErrors((prevErrors) => ({ ...prevErrors, [name]: '' })); // Clear the error if valid\r\n        } catch (err) {\r\n            setErrors((prevErrors) => ({ ...prevErrors, [name]: err.message })); // Set specific error\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        // Update state for form fields\r\n        if (name === 'username') setUsername(value);\r\n        if (name === 'email') setEmail(value);\r\n        if (name === 'password') setPassword(value);\r\n\r\n        // Validate the input as the user types\r\n        handleFieldValidation(name, value);\r\n    };\r\n\r\n    const switchToSigninModal = () => {\r\n        navigate('/login');\r\n    };\r\n\r\n    // Handle Register form submission\r\n    const handleSubmitRegister = async (e) => {\r\n        e.preventDefault();\r\n        setErrors({});\r\n\r\n        try {\r\n            // Validate the form before submitting\r\n            await validationRegisterSchema.validate({ username, email, password }, { abortEarly: false });\r\n\r\n            // ðŸš€ **API Request to Register**\r\n            const response = await axios.post('http://localhost:5000/api/auth/register', { username, email, password });\r\n\r\n            const { token } = response.data;\r\n            console.log('JWT Token:', token);\r\n\r\n            // âœ… **Store token in localStorage or sessionStorage**\r\n            localStorage.setItem('token', token); // Or use sessionStorage.setItem('token', token);\r\n\r\n            // âœ… **Navigate to Login page**\r\n            navigate('/login');\r\n\r\n            // Clear the form fields\r\n            setUsername('');\r\n            setEmail('');\r\n            setPassword('');\r\n        } catch (err) {\r\n            if (err.response) {\r\n                // Server-side validation error (API response)\r\n                console.log(\"first\");\r\n            } else if (err.name === 'ValidationError') {\r\n                // Yup validation errors\r\n                const validationErrors = {};\r\n                err.inner.forEach((error) => {\r\n                    validationErrors[error.path] = error.message;\r\n                });\r\n                setErrors(validationErrors);\r\n            } else {\r\n                // General errors\r\n                console.log(\"second\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <NavbarHome />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMwB,wBAAwB,GAAGtB,GAAG,CAACuB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAChDV,QAAQ,EAAEd,GAAG,CAACyB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC;IACvDV,KAAK,EAAEhB,GAAG,CAACyB,MAAM,CAAC,CAAC,CAACT,KAAK,CAAC,yCAAyC,CAAC,CAACU,QAAQ,CAAC,mBAAmB,CAAC;IAClGR,QAAQ,EAAElB,GAAG,CAACyB,MAAM,CAAC,CAAC,CACjBE,GAAG,CAAC,CAAC,EAAE,mDAAmD,CAAC,CAC3DD,QAAQ,CAAC,sBAAsB;EACxC,CAAC,CAAC;;EAEF;EACA,MAAME,qBAAqB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;IACjD,IAAI;MACA,MAAMR,wBAAwB,CAACS,UAAU,CAACF,IAAI,EAAE;QAAE,CAACA,IAAI,GAAGC;MAAM,CAAC,CAAC;MAClET,SAAS,CAAEW,UAAU,KAAM;QAAE,GAAGA,UAAU;QAAE,CAACH,IAAI,GAAG;MAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOI,GAAG,EAAE;MACVZ,SAAS,CAAEW,UAAU,KAAM;QAAE,GAAGA,UAAU;QAAE,CAACH,IAAI,GAAGI,GAAG,CAACC;MAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEP,IAAI;MAAEC;IAAM,CAAC,GAAGM,CAAC,CAACC,MAAM;;IAEhC;IACA,IAAIR,IAAI,KAAK,UAAU,EAAEd,WAAW,CAACe,KAAK,CAAC;IAC3C,IAAID,IAAI,KAAK,OAAO,EAAEZ,QAAQ,CAACa,KAAK,CAAC;IACrC,IAAID,IAAI,KAAK,UAAU,EAAEV,WAAW,CAACW,KAAK,CAAC;;IAE3C;IACAF,qBAAqB,CAACC,IAAI,EAAEC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAC9BzB,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;;EAED;EACA,MAAM0B,oBAAoB,GAAG,MAAOH,CAAC,IAAK;IACtCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBnB,SAAS,CAAC,CAAC,CAAC,CAAC;IAEb,IAAI;MACA;MACA,MAAMC,wBAAwB,CAACmB,QAAQ,CAAC;QAAE3B,QAAQ;QAAEE,KAAK;QAAEE;MAAS,CAAC,EAAE;QAAEwB,UAAU,EAAE;MAAM,CAAC,CAAC;;MAE7F;MACA,MAAMC,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,IAAI,CAAC,yCAAyC,EAAE;QAAE9B,QAAQ;QAAEE,KAAK;QAAEE;MAAS,CAAC,CAAC;MAE3G,MAAM;QAAE2B;MAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAC/BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,CAAC;;MAEhC;MACAI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC,CAAC,CAAC;;MAEtC;MACAhC,QAAQ,CAAC,QAAQ,CAAC;;MAElB;MACAE,WAAW,CAAC,EAAE,CAAC;MACfE,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOc,GAAG,EAAE;MACV,IAAIA,GAAG,CAACU,QAAQ,EAAE;QACd;QACAI,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACxB,CAAC,MAAM,IAAIf,GAAG,CAACJ,IAAI,KAAK,iBAAiB,EAAE;QACvC;QACA,MAAMsB,gBAAgB,GAAG,CAAC,CAAC;QAC3BlB,GAAG,CAACmB,KAAK,CAACC,OAAO,CAAEC,KAAK,IAAK;UACzBH,gBAAgB,CAACG,KAAK,CAACC,IAAI,CAAC,GAAGD,KAAK,CAACpB,OAAO;QAChD,CAAC,CAAC;QACFb,SAAS,CAAC8B,gBAAgB,CAAC;MAC/B,CAAC,MAAM;QACH;QACAJ,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACzB;IACJ;EACJ,CAAC;EAED,oBACIxC,OAAA,CAAAE,SAAA;IAAA8C,QAAA,eACAhD,OAAA,CAACiD,UAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACZ,CAAC;AAEX,CAAC;AAACjD,EAAA,CA3FID,MAAM;EAAA,QAESZ,WAAW;AAAA;AAAA+D,EAAA,GAF1BnD,MAAM;AA6FZ,eAAeA,MAAM;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}